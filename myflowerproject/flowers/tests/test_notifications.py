from django.test import TestCase
from django.contrib.auth.models import User
from flowers.models import Order, Item, OrderStatusHistory, OrderItem
from telegram_bot.bot import Bot  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Bot –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –º–æ–¥—É–ª—è
from unittest.mock import patch

class OrderTestCase(TestCase):
    @patch('telegram_bot.bot.Bot.send_message')  # –ú–æ–∫–∞–µ–º –≤—ã–∑–æ–≤ –±–æ—Ç–∞
    def test_send_telegram_notification_on_order_creation(self, mock_send_message):
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = User.objects.create_user(username='testuser', password='testpass')

        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑
        order = Order.objects.create(user=user, status="new")

        # –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç
        item = Item.objects.create(name="Flowers")

        # –°–æ–∑–¥–∞–µ–º OrderItem —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –ø–æ–ª–µ–º quantity
        OrderItem.objects.create(order=order, item=item, quantity=1, price=10.00)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = f"üõí –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ ‚Ññ{order.id}\nüì¶ –°—Ç–∞—Ç—É—Å: {order.status}"
        mock_send_message.assert_called_with(chat_id="@admin_chat_id", text=message)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ —Å–æ–∑–¥–∞–Ω–∞
        self.assertEqual(OrderStatusHistory.objects.count(), 1)
        order_history = OrderStatusHistory.objects.first()
        self.assertEqual(order_history.order, order)
        self.assertEqual(order_history.status, order.status)